# Initially generated by 'nixos-generate-config' on qemu.
{ config, pkgs, lib, ... }:
{
  imports = [
    # Enables non-free firmware.
    <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usbhid" "uas" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [  ];
  boot.kernelModules = [ "kvm-intel" "nvidia" "acpi_call" ];
  boot.extraModulePackages = with config.boot.kernelPackages; [ nvidia_x11 acpi_call ];
  boot.blacklistedKernelModules = [ "nouveau" ];

  ## CPU
  nix.maxJobs = lib.mkDefault 8;
  powerManagement.cpuFreqGovernor = "performance";
  hardware.cpu.intel.updateMicrocode = true;

  ## GPU
  #services.xserver.videoDrivers = [ "modesetting" ];
  hardware.opengl.enable = true;
  environment.extraInit = "export WLR_DRM_DEVICES=/dev/dri/card0";

  ## SSDs
  services.fstrim.enable = true;

  ## Boot with UEFI.
  boot.loader = {
    timeout = 3;
    efi.canTouchEfiVariables = true;
    systemd-boot = {
      enable = true;
      # Disable when working - as this allows root access.
      editor = false;
      configurationLimit = 10;
      memtest86.enable = true;
    };
  };

  ## Storage.
  fileSystems = {
    "/" = {
      device = "/dev/disk/by-label/nixos";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-label/BOOT";
      fsType = "vfat";
    };
  };
  swapDevices = [  ];
}
